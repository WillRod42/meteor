yVar ="usage",
"Hello",
"Decisions",
"Count")
d <- data %>%
group_by(Are.you.interested.in.applying.to.the.Informatics.major.) %>%
summarise(usage = n())
CreateFirstChart(d,
xVar = "What.operating.system.do.you.typically.use.",
yVar ="usage",
"Hello",
"Decisions",
"Count")
# Set working directory if needed
CreateFirstChart <- function(data, xVar, yVar, title, xLab, yLab) {
# Create chart using the given variables.
chart <- ggplot(dataset, aes(dataset[[xVar]], dataset[[yVar]])) +
geom_bar(stat = "identity", aes(fill = dataset[[yVar]])) +
labs(x = xLab, y = yLab, fill = yLab) +
ggtitle(title)
# Returns chart
return(chart)
}
d <- data %>%
group_by(Are.you.interested.in.applying.to.the.Informatics.major.) %>%
summarise(usage = n())
CreateFirstChart(d,
xVar = "What.operating.system.do.you.typically.use.",
yVar ="usage",
"Hello",
"Decisions",
"Count")
# Set working directory if needed
CreateFirstChart <- function(data, xVar, yVar, title, xLab, yLab) {
# Create chart using the given variables.
chart <- ggplot(data, aes(data[[xVar]], data[[yVar]])) +
geom_bar(stat = "identity", aes(fill = data[[yVar]])) +
labs(x = xLab, y = yLab, fill = yLab) +
ggtitle(title)
# Returns chart
return(chart)
}
d <- data %>%
group_by(Are.you.interested.in.applying.to.the.Informatics.major.) %>%
summarise(usage = n())
CreateFirstChart(d,
xVar = "What.operating.system.do.you.typically.use.",
yVar ="usage",
"Hello",
"Decisions",
"Count")
CreateFirstChart <- function(data, xVar, yVar, title, xLab, yLab) {
# Create chart using the given variables.
chart <- ggplot(data, aes(data[[xVar]], data[[yVar]])) +
geom_bar(stat = "identity", aes(fill = data[[yVar]])) +
labs(x = xLab, y = yLab, fill = yLab) +
ggtitle(title)
# Returns chart
return(chart)
}
CreateFirstChart(d,
xVar = "What.operating.system.do.you.typically.use.",
yVar ="usage",
"Hello",
"Decisions",
"Count")
CreateFirstChart <- function(data, xVar, yVar, title, xLab, yLab) {
# Create chart using the given variables.
chart <- ggplot(data, aes(data[[xVar]], data[[yVar]])) +
geom_bar(stat = "identity", aes(fill = data[[xVar]])) +
labs(x = xLab, y = yLab, fill = yLab) +
ggtitle(title)
# Returns chart
return(chart)
}
d <- data %>%
group_by(Are.you.interested.in.applying.to.the.Informatics.major.) %>%
summarise(usage = n())
CreateFirstChart(d,
xVar = "What.operating.system.do.you.typically.use.",
yVar ="usage",
"Hello",
"Decisions",
"Count")
CreateFirstChart <- function(data, xVar, yVar, title, xLab, yLab) {
# Create chart using the given variables.
chart <- ggplot(data, aes(data[,xVar], data[,yVar])) +
geom_bar(stat = "identity", aes(fill = data[,xVar])) +
labs(x = xLab, y = yLab, fill = yLab) +
ggtitle(title)
# Returns chart
return(chart)
}
d <- data %>%
group_by(Are.you.interested.in.applying.to.the.Informatics.major.) %>%
summarise(usage = n())
CreateFirstChart(d,
xVar = "What.operating.system.do.you.typically.use.",
yVar ="usage",
"Hello",
"Decisions",
"Count")
d <- data %>%
group_by(Are.you.interested.in.applying.to.the.Informatics.major.) %>%
summarise(usage = n())
CreateFirstChart(d,
xVar = "What.operating.system.do.you.typically.use.",
yVar ="usage",
"Hello",
"Decisions",
"Count")
d <- data %>%
group_by(Are.you.interested.in.applying.to.the.Informatics.major.) %>%
summarise(usage = n())
CreateFirstChart(d,
xVar = "Are.you.interested.in.applying.to.the.Informatics.major.",
yVar ="usage",
"Hello",
"Decisions",
"Count")
data <- read.csv("./data/intro-survey.csv", stringsAsFactors = F)
d <- data %>%
group_by(Are.you.interested.in.applying.to.the.Informatics.major.) %>%
summarise(usage = n())
d <- data %>%
group_by(Are.you.interested.in.applying.to.the.Informatics.major.) %>%
summarise(usage = n())
d <- data %>%
group_by(Are.you.interested.in.applying.to.the.Informatics.major.) %>%
summarise(usage = n())
CreateFirstChart(d,
xVar = "Are.you.interested.in.applying.to.the.Informatics.major.",
yVar ="usage",
"Hello",
"Decisions",
"Count")
data <- read.csv("./data/intro-survey.csv", stringsAsFactors = F)
d <- data %>%
group_by(Are.you.interested.in.applying.to.the.Informatics.major.) %>%
summarise(usage = n())
CreateFirstChart(d,
xVar = "Are.you.interested.in.applying.to.the.Informatics.major.",
yVar ="usage",
"Hello",
"Decisions",
"Count")
CreateFirstChart(d,
xVar = "Are.you.interested.in.applying.to.the.Informatics.major.",
yVar ="usage",
"Hello",
"Decisions",
"Count")
d <- data %>%
group_by(Are.you.interested.in.applying.to.the.Informatics.major.) %>%
summarise(usage = n())
CreateFirstChart(d,
xVar = "Are.you.interested.in.applying.to.the.Informatics.major.",
yVar ="usage",
"Hello",
"Decisions",
"Count")
chart <- ggplot(d, aes(d$Are.you.interested.in.applying.to.the.Informatics.major., d$usage)) +
geom_bar(stat = "identity", aes(fill = d$Are.you.interested.in.applying.to.the.Informatics.major.)) +
labs(x = "d", y = "co", fill = "io") +
ggtitle("HELLO")
print(chart)
chart <- ggplot(d, aes(d$Are.you.interested.in.applying.to.the.Informatics.major., d$usage)) +
geom_bar(postion = "dodge", stat = "identity", aes(fill = d$Are.you.interested.in.applying.to.the.Informatics.major.)) +
labs(x = "d", y = "co", fill = "io") +
ggtitle("HELLO"
d <- data %>%
data <- read.csv("./data/intro-survey.csv", stringsAsFactors = F)
d <- data %>%
group_by(What.is.your.current.class.standing., Are.you.interested.in.applying.to.the.Informatics.major.) %>%
summarise(usage = n())
chart <- ggplot(d, aes(d$What.is.your.current.class.standing., d$Are.you.interested.in.applying.to.the.Informatics.major., d$usage)) +
geom_bar(postion = "dodge", stat = "identity", aes(fill = d$Are.you.interested.in.applying.to.the.Informatics.major.)) +
labs(x = "d", y = "co", fill = "io") +
ggtitle("HELLO")
print(chart)
chart <- ggplot(d, aes(d$What.is.your.current.class.standing., x = d$Are.you.interested.in.applying.to.the.Informatics.major., y = d$usage)) +
geom_bar(postion = "dodge", stat = "identity", aes(fill = d$Are.you.interested.in.applying.to.the.Informatics.major.)) +
labs(x = "d", y = "co", fill = "io") +
ggtitle("HELLO")
chart <- ggplot(d, aes(d$What.is.your.current.class.standing., x = d$Are.you.interested.in.applying.to.the.Informatics.major., y = d$usage)) +
geom_bar(postion = "dodge", stat = "identity") +
labs(x = "d", y = "co", fill = "io") +
ggtitle("HELLO")
chart <- ggplot(d, aes(d$What.is.your.current.class.standing., x = d$Are.you.interested.in.applying.to.the.Informatics.major., y = d$usage)) +
geom_bar(postion = "dodge", stat = "identity") +
labs(x = "d", y = "co", fill = "io") +
ggtitle("HELLO")
print(chart)
chart <- ggplot(d, aes(d$What.is.your.current.class.standing., x = d$Are.you.interested.in.applying.to.the.Informatics.major., y = d$usage)) +
geom_bar(stat = "identity", aes(color = d$Are.you.interested.in.applying.to.the.Informatics.major.)) +
labs(x = "d", y = "co", fill = "io") +
ggtitle("HELLO")
print(chart)
chart <- ggplot(d, aes(d$What.is.your.current.class.standing., x = d$Are.you.interested.in.applying.to.the.Informatics.major., y = d$usage)) +
geom_bar(stat = "identity", aes(fill = d$Are.you.interested.in.applying.to.the.Informatics.major.)) +
labs(x = "d", y = "co", fill = "io") +
ggtitle("HELLO")
print(chart)
chart <- ggplot(d) +
geom_bar(aes(x = d$What.is.your.current.class.standing., fill = d$Are.you.interested.in.applying.to.the.Informatics.major., y = d$usage), stat = "identity") +
labs(x = "d", y = "co", fill = "io") +
ggtitle("HELLO")
print(chart)
chart <- ggplot(d) +
geom_bar(aes(x = d$What.is.your.current.class.standing., fill = d$Are.you.interested.in.applying.to.the.Informatics.major., y = d$usage), stat = "identity") +
labs(x = "d", y = "co", fill = "io") +
ggtitle("HELLO")
print(chart)
library(ggplot2)
library(dplyr)
# Creates the first chart with the given information and returns a chart.
# Set working directory if needed
CreateFirstChart <- function(data, xVar, yVar, title, xLab, yLab) {
dataset <- data %>%
group_by(data[[xVar]], data[[yVar]]) %>%
summarise(count = n())
# Create chart using the given variables.
chart <- ggplot(dataset) +
geom_bar(aes(x = dataset[[xVar]], fill = dataset[[yVar]], y = dataset$count), stat = "identity") +
labs(x = xLab, y = yLab, fill = xLab) +
ggtitle(title)
# Returns chart
return(chart)
}
CreateFirstChart(d,
xVar = "What.is.your.current.class.standing.",
yVar ="Are.you.interested.in.applying.to.the.Informatics.major.",
"Hello",
"Decisions",
"Count")
CreateFirstChart(d,
xVar = "What.is.your.current.class.standing.",
yVar ="Are.you.interested.in.applying.to.the.Informatics.major.",
"Hello",
"Decisions",
"Count")
CreateFirstChart <- function(data, xVar, yVar, title, xLab, yLab) {
dataset <- data %>%
group_by_(xVar, yVar) %>%
summarise(count = n())
# Create chart using the given variables.
chart <- ggplot(dataset) +
geom_bar(aes(x = dataset[[xVar]], fill = dataset[[yVar]], y = dataset$count), stat = "identity") +
labs(x = xLab, y = yLab, fill = xLab) +
ggtitle(title)
# Returns chart
return(chart)
}
CreateFirstChart(d,
xVar = "What.is.your.current.class.standing.",
yVar ="Are.you.interested.in.applying.to.the.Informatics.major.",
"Hello",
"Decisions",
"Count")
data <- read.csv("./data/intro-survey.csv", stringsAsFactors = F)
CreateFirstChart(d,
xVar = "What.is.your.current.class.standing.",
yVar ="Are.you.interested.in.applying.to.the.Informatics.major.",
"Hello",
"Decisions",
"Count")
data <- read.csv("./data/intro-survey.csv", stringsAsFactors = F)
CreateFirstChart(data,
xVar = "What.is.your.current.class.standing.",
yVar ="Are.you.interested.in.applying.to.the.Informatics.major.",
"Hello",
"Decisions",
"Count")
library(ggplot2)
library(dplyr)
# Creates the first chart with the given information and returns a chart.
# Set working directory if needed
CreateFirstChart <- function(data, xVar, yVar, title, xLab, yLab) {
dataset <- data %>%
group_by_(xVar, yVar) %>%
summarise(count = n())
# Create chart using the given variables.
chart <- ggplot(dataset) +
geom_bar(aes(x = dataset[[xVar]], fill = dataset[[yVar]], y = dataset$count), stat = "identity") +
labs(x = xLab, y = yLab, fill = xLab) +
ggtitle(title)
# Returns chart
return(chart)
}
---
title: "TBD"
output: html_document
---
```{r setup, include=FALSE}
knitr::opts_chunk$set(echo = TRUE)
library(knitr)
source('./scripts/BuildFirstChart.R')
source('./scripts/CalculateInfo.R')
```
```{r echo=F}
# Retrieve data from file.
data <- read.csv("./data/intro-survey.csv", stringsAsFactors = F)
CreateFirstChart(data,
xVar = "What.is.your.current.class.standing.",
yVar ="Are.you.interested.in.applying.to.the.Informatics.major.",
"Hello",
"Decisions",
"Count")
knitr::opts_chunk$set(echo = TRUE)
library(knitr)
source('./scripts/BuildFirstChart.R')
source('./scripts/CalculateInfo.R')
CreateFirstChart(data,
xVar = "What.is.your.current.class.standing.",
yVar ="Are.you.interested.in.applying.to.the.Informatics.major.",
"Hello",
"Decisions",
"Count")
CreateFirstChart(data,
xVar = "What.is.your.current.class.standing.",
yVar ="Are.you.interested.in.applying.to.the.Informatics.major.",
"Hello",
"Decisions",
"Count")
library(ggplot2)
library(dplyr)
# Creates the first chart with the given information and returns a chart.
# Set working directory if needed
CreateFirstChart <- function(data, xVar, yVar, title, xLab, yLab) {
# Create a dataset with the given information.
dataset <- data %>%
group_by_(xVar, yVar) %>%
summarise(count = n())
# Create chart using the dataset created with the given information.
chart <- ggplot(dataset) +
geom_bar(aes(x = dataset[[xVar]], fill = dataset[[yVar]], y = dataset$count), stat = "identity") +
labs(x = xLab, y = yLab, fill = xLab) +
ggtitle(title)
# Returns chart
return(chart)
}
library(ggplot2)
library(dplyr)
# Creates the first chart, a stacked bar graph, with the given information and returns it.
CreateFirstChart <- function(data, xVar, yVar, title, xLab, yLab) {
# Create a dataset with the given information.
dataset <- data %>%
group_by_(xVar, yVar) %>%
summarise(count = n())
# Create chart using the dataset created with the given information.
chart <- ggplot(dataset) +
geom_bar(aes(x = dataset[[xVar]], fill = dataset[[yVar]], y = dataset$count), stat = "identity") +
labs(x = xLab, y = yLab, fill = xLab) +
ggtitle(title)
# Returns chart
return(chart)
}
data <- read.csv("./data/intro-survey.csv", stringsAsFactors = F)
View(data)
source('./scripts/BuildFirstChart.R')
source('./scripts/CalculateInfo.R')
data <- read.csv("./data/intro-survey.csv", stringsAsFactors = F)
CreateFirstChart(data, "Are.you.interested.in.applying.to.the.informatics.major.", "What.operating.system.do.you.typically.use.","Hello","Decisions","Count")
data <- read.csv("./data/intro-survey.csv", stringsAsFactors = F)
CreateFirstChart(data, , "Are.you.interested.in.applying.to.the.Informatics.major.", "What.operating.system.do.you.typically.use.","Hello","Decisions","Count")
data <- read.csv("./data/intro-survey.csv", stringsAsFactors = F)
CreateFirstChart(data, "Are.you.interested.in.applying.to.the.Informatics.major.", "What.operating.system.do.you.typically.use.", "Hello", "Decisions", "Count")
knitr::opts_chunk$set(echo = TRUE)
library(knitr)
source('./scripts/BuildFirstChart.R')
source('./scripts/CalculateInfo.R')
library(ggplot2)
library(dplyr)
# Creates the first chart, a stacked bar graph, with the given information and returns it.
CreateFirstChart <- function(data, xVar, yVar, title, xLab, yLab) {
# Creates a dataset with the given information.
dataset <- data %>%
group_by_(xVar, yVar) %>%
summarise(count = n())
# Creates chart using the dataset created with the given information.
chart <- ggplot(dataset) +
geom_bar(aes(x = dataset[[xVar]], fill = dataset[[yVar]], y = dataset$count), stat = "identity") +
labs(x = xLab, y = yLab, fill = xLab) +
ggtitle(title)
# Returns chart
return(chart)
}
data <- read.csv("./data/intro-survey.csv", stringsAsFactors = F)
# First Chart Tester
CreateFirstChart(data, "Are.you.interested.in.applying.to.the.Informatics.major.", "What.operating.system.do.you.typically.use.", "Hello", "Decisions", "Count")
CreateFirstChart(data, "Are.you.interested.in.applying.to.the.Informatics.major.", "What.operating.system.do.you.typically.use.", "Hello", "Decisions", "Count")
knitr::opts_chunk$set(echo = TRUE)
library(knitr)
source('./scripts/BuildFirstChart.R')
source('./scripts/CalculateInfo.R')
data <- read.csv("./data/intro-survey.csv", stringsAsFactors = F)
# First Chart Tester
CreateFirstChart(data, "Are.you.interested.in.applying.to.the.Informatics.major.", "What.operating.system.do.you.typically.use.", "Hello", "Decisions", "Count")
data <- read.csv("./data/intro-survey.csv", stringsAsFactors = F)
# First Chart Tester
CreateFirstChart(data, "Are.you.interested.in.applying.to.the.Informatics.major.", "What.operating.system.do.you.typically.use.", "Hello", "Decisions", "Count")
library(ggplot2)
library(dplyr)
# Creates the first chart, a stacked bar graph, with the given information and returns it.
CreateFirstChart <- function(data, xVar, yVar, title, xLab, yLab) {
# Creates a dataset with the given information.
dataset <- data %>%
group_by(xVar, yVar) %>%
summarise(count = n())
# Creates chart using the dataset created with the given information.
chart <- ggplot(dataset) +
geom_bar(aes(x = dataset[[xVar]], fill = dataset[[yVar]], y = dataset$count), stat = "identity") +
labs(x = xLab, y = yLab, fill = xLab) +
ggtitle(title)
# Returns chart
return(chart)
}
data <- read.csv("./data/intro-survey.csv", stringsAsFactors = F)
# First Chart Tester
CreateFirstChart(data, "Are.you.interested.in.applying.to.the.Informatics.major.", "What.operating.system.do.you.typically.use.", "Hello", "Decisions", "Count")
library(ggplot2)
library(dplyr)
# Creates the first chart, a stacked bar graph, with the given information and returns it.
CreateFirstChart <- function(data, xVar, yVar, title, xLab, yLab) {
# Creates a dataset with the given information.
dataset <- data %>%
group_by_(xVar, yVar) %>%
summarise(count = n())
# Creates chart using the dataset created with the given information.
chart <- ggplot(dataset) +
geom_bar(aes(x = dataset[[xVar]], fill = dataset[[yVar]], y = dataset$count), stat = "identity") +
labs(x = xLab, y = yLab, fill = xLab) +
ggtitle(title)
# Returns chart
return(chart)
}
data <- read.csv("./data/intro-survey.csv", stringsAsFactors = F)
# First Chart Tester
CreateFirstChart(data, "Are.you.interested.in.applying.to.the.Informatics.major.", "What.operating.system.do.you.typically.use.", "Hello", "Decisions", "Count")
data <- read.csv("./data/intro-survey.csv", stringsAsFactors = F)
dataset <- data %>%
group_by_("Are.you.interested.in.applying.to.the.Informatics.major.", "What.operating.system.do.you.typically.use.") %>%
summarise(count = n())
library(dplyr)
source('./scripts/BuildFirstChart.R')
source('./scripts/CalculateInfo.R')
library(knitr)
library(dplyr)
source('./scripts/BuildFirstChart.R')
source('./scripts/CalculateInfo.R')
shiny::runApp('Desktop/a8-jinc132')
runApp('Desktop/a8-jinc132')
runApp('Desktop/a8-jinc132')
runApp('Desktop/a8-jinc132')
shiny::runApp('Desktop/a8-jinc132')
shiny::runApp('Desktop/a8-jinc132')
runApp('Desktop/a8-jinc132')
runApp('Desktop/a8-jinc132')
runApp('Desktop/a8-jinc132')
runApp('Desktop/a8-jinc132')
runApp('Desktop/a8-jinc132')
shiny::runApp('Desktop/a8-jinc132')
runApp('Desktop/a8-jinc132')
shiny::runApp('Desktop/meteor')
runApp('Desktop/meteor')
# load required packages
library(shiny)
library(ggplot2)
library(plotly)
library(dplyr)
library(tidyr)
# set my working directory as needed
#setwd("~/Desktop/meteor")
# read in raw dataset
dataset <- read.csv("./data/meteorite-landings.csv")
# filter out incorrect data
meteorite.data <- dataset %>%
filter(year>=860 & year<=2016) %>% # filter out weird years
filter(reclong<=180 & reclong>=-180 & (reclat!=0 | reclong!=0)) # filter out weird locations
unique.data <- meteorite.data[!duplicated(meteorite.data$GeoLocation), ]
shinyServer(function(input, output) {
output$map <- renderPlotly({
filter.by.year <- meteorite.data %>%
filter(year >= as.numeric(input$min) & year <= as.numeric(input$max))
#filter.by.year <- test.data %>%
# filter(year >= as.numeric(input$range[[1]]) & year <= as.numeric(input$range[[2]]))
g <- list(
scope = "world",
showland = TRUE,
landcolor = toRGB("grey83"),
subunitcolor = toRGB("black"),
countrycolor = "rgb(124, 106, 132)",
showlakes = TRUE,
lakecolor = toRGB("white"),
showsubunits = TRUE,
showcountries = TRUE,
resolution = 50,
projection = list(type = "mercator")
)
return(plot_geo(filter.by.year) %>%
layout(autosize = F, title = "Where Meteorite's Land", geo = g) %>%
add_markers(x = ~reclong, y = ~reclat, hoverinfo = "text",
text = ~paste("Date: ", year, "</br></br>",  "Class of Meteorite: ",
recclass,"</br>Size: ", mass),
marker = list(color = "rgb(126, 41, 162)")
))
})
runApp('Desktop/meteor')
shiny::runApp('Desktop/meteor')
runApp('Desktop/meteor')
runApp('Desktop/meteor')
shiny::runApp('Desktop/meteor')
